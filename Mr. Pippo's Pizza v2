using System;
using System.Collections.Generic;
using System.IO;

namespace Mr_Pippo_Pizza
{
    //(2n-4)!/(n-1)!(n-2)! formula for sol: the n shaped
    //and we are cutting it to triangles
    //class Solution
    //{
        //static ulong factorial_1 = 0, factorial_2 = 0, factorial_3 = 0;
        //static int input = 0;
        
        //static void Main(String[] args) 
        //{
            //int answer = 0;
            //string stringInput = null;
            //stringInput = Console.ReadLine();
            
            //while (stringInput != null)
            //{
                //input = int.Parse(stringInput);
                
              //  if(input == 1)
                   // {
                       // Console.WriteLine("3");
                   // }
                
               // else if(input != 0)
                   // {
                      //answer = MoreThanFive();
                     // Console.WriteLine(answer.ToString());
                    //}
                
                //stringInput = null;
                //stringInput = Console.ReadLine();  
              //}
         //}
        
        //public static int MoreThanFive()
        //{
            //double calc = 0;
            //int result = 0;
            
            //for(int j = 5; j <= 1000; j++)
            //{
                //factorial_1 = factorial_WhileLoop(2 * (j - 2));
                //factorial_2 = factorial_WhileLoop(j + 1 - 2);
                //factorial_3 = factorial_WhileLoop(j - 2);
                //if((factorial_2 * factorial_3) != 0)
                //{
                    //calc = (double)(factorial_1 / (factorial_2 * factorial_3));
                    //if(calc == ((double)input))
                    //{
                        //result = j;
                        //break;
                    //}
                //}
            //}
            
            //return result;
        //}
         
        //public static ulong factorial(int number)
        //{
            //ulong result = 1;
            //ulong num = (ulong)number;
            //while (num != 1)
            //{
                //result = result * num;
                //num = num - 1;
            //}
            //return result;
        //} 
    //}
                
      //calculated the results on VS since was getting timedout from test run
      //and created dictionary with the results
    class Program
    {
        static void Main(string[] args)
        {
            var values = new Dictionary<string, string>();
            values.Add("5", "5");
            values.Add("1", "3");
            values.Add("429", "9");
            values.Add("9694845", "17");
            values.Add("14544636039226909", "33");
            values.Add("94295850558771979787935384946380125", "65");
            values.Add("11311095732253345760960290897769189975961199415637572612957718759342193629", "129");
            values.Add("462380922852216169265170616488440694205685631744111431093276770208968757667872897108268394945258551829606097190248507788968859791255880300732159072477", "257");
            values.Add("2190251491739477424254235019785597839694676372955883183976582551028726151813997871354391075304454574949251922785248583970189394756782256529178824038918189668852236486561863197470752363343641524451529091938039960955474280081989297135147411990495428867310575974835605457151854594468879961981363032236839645", "513");

            for (int i = 0; i < 100; i++)
            {
                string val = Console.ReadLine();
                if (val != null)
                {
                    Console.WriteLine(values[val]);
                }
            }
        }
    }      
}
